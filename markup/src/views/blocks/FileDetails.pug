.File.FileDetails
  .File__header.FileDetails__header
    .File__icon.FileIcon.FileIcon_file
    .File__title
      | ya.make
      = ' '
      span.FileDetails__size (4 347 bytes)

    .File__right
      .FileDetails__download

  .File__content.FileDetails__content
    table.FileDetails__lines
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td.FileDetails__lineContent: pre: span.Token.Token_comment #!/usr/bin/env python
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td.FileDetails__lineContent: pre
          span.Token.Token_keyword import
          = ' '
          | os
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td.FileDetails__lineContent: pre
          span.Token.Token_keyword import
          = ' '
          | sys
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td.FileDetails__lineContent: pre
          span.Token.Token_keyword import
          = ' '
          | platform
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td.FileDetails__lineContent: pre
          span.Token.Token_keyword import
          = ' '
          | json
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td.FileDetails__lineContent: pre
          | URLS = [
          span.Token.Token_string 'https://proxy.sandbox.yandex-team.ru/453818264'
          = ' '
          | ,
          = ' '
          span.Token.Token_string 'http://storage-int.mds.yandex.net/get-sandbox/110738/by_platform.json.453815347'
          | ]
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td.FileDetails__lineContent: pre
          | MD5 =
          = ' '
          span.Token.Token_string '7f5a85f9c28d35c3a76d8cea7af51106'
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td.FileDetails__lineContent: pre RETRIES = 5
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td.FileDetails__lineContent: pre HASH_PREFIX = 10
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td.FileDetails__lineContent: pre HOME_DIR = os.path.expanduser('~')
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td.FileDetails__lineContent: pre
          span.Token.Token_keyword def
          = ' '
          span.Token.Token_method create_dirs
          | (path):
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td.FileDetails__lineContent: pre
          = '    '
          span.Token.Token_keyword try
          | :
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td.FileDetails__lineContent: pre         os.makedirs(path)
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td.FileDetails__lineContent: pre
          = '    '
          span.Token.Token_keyword except
          = ' '
          | OSError
          = ' '
          span.Token.Token_keyword as
          = ' '
          | e:
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td.FileDetails__lineContent: pre
          = '        '
          span.Token.Token_keyword import
          = ' '
          | errno
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td.FileDetails__lineContent: pre
          = '        '
          span.Token.Token_keyword if
          = ' '
          | e.errno != errno.EEXIST:
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td.FileDetails__lineContent: pre
          = '            '
          span.Token.Token_keyword raise
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td.FileDetails__lineContent: pre
          = '    '
          span.Token.Token_keyword return
          = ' '
          | path
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td.FileDetails__lineContent: pre
          span.Token.Token_keyword def
          = ' '
          span.Token.Token_method misc_root
          | ():
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td.FileDetails__lineContent: pre
          = '    '
          span.Token.Token_keyword return
          = ' '
          | create_dirs(os.getenv(
          span.Token.Token_string 'YA_CACHE_DIR'
          | ) or os.path.join(HOME_DIR,
          = ' '
          span.Token.Token_string '.ya'
          | ))
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td.FileDetails__lineContent: pre
          span.Token.Token_keyword def
          = ' '
          span.Token.Token_method tool_root():
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td.FileDetails__lineContent: pre
          span.Token.Token_keyword def
          = ' '
          span.Token.Token_method create_dirs
          | (path):
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td.FileDetails__lineContent: pre
          = '    '
          span.Token.Token_keyword try
          | :
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td.FileDetails__lineContent: pre         os.makedirs(path)
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td.FileDetails__lineContent: pre
          = '    '
          span.Token.Token_keyword except
          = ' '
          | OSError
          = ' '
          span.Token.Token_keyword as
          = ' '
          | e:
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td.FileDetails__lineContent: pre
          = '        '
          span.Token.Token_keyword import
          = ' '
          | errno
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td.FileDetails__lineContent: pre
          = '        '
          span.Token.Token_keyword if
          = ' '
          | e.errno != errno.EEXIST:
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td.FileDetails__lineContent: pre
          = '            '
          span.Token.Token_keyword raise
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td
      tr.FileDetails__line
        td.FileDetails__lineNumber
        td.FileDetails__lineContent: pre
          = '    '
          span.Token.Token_keyword return
          = ' '
          | path
